#include <hidef.h>      /* common defines and macros */
#include <MC9S12XS128.h>     /* derivative information */
//ragma LINK_INFO DERIVATIVE "mc9s12xs128"
#define uchar unsigned char
#define uint unsigned int
void LCD_clear(void);
/*
sbit    sce = PORTB_PB2;  //片选
sbit    res = PORTB_PB0;  //复位,0复位
sbit    dc  = PORTB_PB1;  //1写数据，0写指令
sbit    sdin = PORTB_PB3;  //数据
sbit    sclk = PORTB_PB4;  //时钟
*/
unsigned int font6x8[][6] =
{
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // sp      00
    { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !       01
    { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "       02
    { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #       03
    { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $       04
    { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %       05
    { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &       06
    { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '       07
    { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (       08
    { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )       09
    { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *       10
    { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +       11
    { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,       12
    { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -       13
    { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .       14
    { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /       15
    { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 0       16
    { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 1       17
    { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 2       18
    { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 3       19
    { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 4       20
    { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 5       21
    { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 6       22
    { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 7       23
    { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 8       24
    { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 9       25
    { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :       26
    { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;       27
    { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <       28
    { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =       29
    { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >       30
    { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?       31
    { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @       32
    { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A       33
    { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B       34
    { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C       35
    { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D       36
    { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E       37
    { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F       38
    { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G       39
    { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H       40
    { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I       41
    { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J       42
    { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K       43
    { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L       44
    { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M       45
    { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N       46
    { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O       47
    { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P       48
    { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q       49
    { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R       50
    { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S       51
    { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T       52
    { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U       53
    { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V       54
    { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W       55
    { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X       56
    { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y       57
    { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z       58
    { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [       59
    { 0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55 },   // 55      60
    { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]       61
    { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^       62
    { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _       63
    { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '       64
    { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a       65
    { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b       66
    { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c       67
    { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d       68
    { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e       69
    { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f       70
    { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g       71
    { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h       72
    { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i       73
    { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j       74
    { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k       75
    { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l       76
    { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m       77
    { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n       78
    { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o       79
    { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p       80
    { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q       81
    { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r       82
    { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s       83
    { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t       84
    { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u       85
    { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v       86
    { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w       87
    { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x       88
    { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y       89
    { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z       90
    { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 }    // horiz lines
};

//======================================================
// 128X64I液晶底层驱动[8X16]字体库
// 描  述: [8X16]西文字符的字模数据 (纵向取模,字节倒序)
// !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
//======================================================
const unsigned char F8X16[]=
{
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//	 	0
  0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,//	!	1
  0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//	"	2
  0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,//	#	3
  0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,//	$	4
  0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,//	%	5
  0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,//	&	6
  0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//	'	7
  0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,//	(	8
  0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,//	)	9
  0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,//	*	10
  0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,//	+	11
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,//	,	12
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,//	-	13
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,//	.	14
  0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,//	/	15
  0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,//	0	16
  0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//	1	17
  0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,//	2	18
  0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,//	3	19
  0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,//	4	20
  0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,//	5	21
  0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,//	6	22
  0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//	7	23
  0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,//	8	24
  0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,//	9	25
  0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,//	:	26
  0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,//	;	27
  0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,//	<	28
  0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,//	=	29
  0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,//	>	30
  0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,//	?	31
  0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,//	@	32
  0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,//	A	33
  0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,//	B	34
  0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,//	C	35
  0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,//	D	36
  0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,//	E	37
  0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,//	F	38
  0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,//	G	39
  0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,//	H	40
  0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//	I	41
  0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,//	J	42
  0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,//	K	43
  0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,//	L	44
  0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,//	M	45
  0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,//	N	46
  0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,//	O	47
  0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,//	P	48
  0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,//	Q	49
  0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,//	R	50
  0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,//	S	51
  0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//	T	52
  0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//	U	53
  0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,//	V	54
  0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,//	W	55
  0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,//	X	56
  0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//	Y	57
  0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,//	Z	58
  0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,//	[	59
  0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,//	\	60
  0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,//	]	61
  0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//	^	62
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,//	_	63
  0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//	`	64
  0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,//	a	65
  0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,//	b	66
  0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,//	c	67
  0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,//	d	68
  0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,//	e	69
  0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//	f	70
  0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,//	g	71
  0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//	h	72
  0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//	i	73
  0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,//	j	74
  0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,//	k	75
  0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//	l	76
  0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,//	m	77
  0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//	n	78
  0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//	o	79
  0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,//	p	80	
  0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,//	q	81
  0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,//	r	82
  0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,//	s	83
  0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,//	t	84
  0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,//	u	85
  0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,//	v	86
  0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,//	w	87
  0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,//	x	88
  0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,//	y	89
  0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,//	z	90
  0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,//	{	91
  0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,//	|	92
  0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,//	}	93
  0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//	~	94
};
const unsigned char F14x16_Idx[] = 
{
  "智能车液晶室温度按键次电压大气距离时间"
};
const unsigned char F14x16[] = 
{  
  0x14,0x13,0x92,0x7E,0x32,0x52,0x92,0x00,0x7C,0x44,0x44,0x44,0x7C,0x00,
  0x01,0x01,0x00,0xFF,0x49,0x49,0x49,0x49,0x49,0x49,0xFF,0x00,0x00,0x00,//智
  0xB8,0x97,0x92,0x90,0x94,0xB8,0x10,0x00,0x7F,0x48,0x48,0x44,0x74,0x20,
  0xFF,0x0A,0x0A,0x4A,0x8A,0x7F,0x00,0x00,0x3F,0x44,0x44,0x42,0x72,0x20,//能
  0x04,0x84,0xC4,0xA4,0x9C,0x87,0x84,0xF4,0x84,0x84,0x84,0x84,0x84,0x00,
  0x04,0x04,0x04,0x04,0x04,0x04,0x04,0xFF,0x04,0x04,0x04,0x04,0x04,0x04,//车
  0x61,0x06,0xE0,0x18,0x84,0xE4,0x1C,0x84,0x65,0xBE,0x24,0xA4,0x64,0x04,
  0x04,0xFF,0x00,0x01,0x00,0xFF,0x41,0x21,0x12,0x0C,0x1B,0x61,0xC0,0x40,//液
  0x00,0x00,0x00,0x7E,0x2A,0x2A,0x2A,0x2A,0x2A,0x2A,0x7E,0x00,0x00,0x00,
  0x7F,0x25,0x25,0x25,0x25,0x7F,0x00,0x00,0x7F,0x25,0x25,0x25,0x25,0x7F,//晶
  0x10,0x2C,0x24,0xA4,0x64,0x25,0x26,0x24,0x24,0xA4,0x24,0x34,0x2C,0x04,
  0x40,0x48,0x49,0x49,0x49,0x49,0x7F,0x49,0x49,0x49,0x4B,0x48,0x40,0x40,//室
  0x21,0x86,0x70,0x00,0x7E,0x4A,0x4A,0x4A,0x4A,0x4A,0x7E,0x00,0x00,0x00,
  0xFE,0x01,0x40,0x7F,0x41,0x41,0x7F,0x41,0x41,0x7F,0x41,0x41,0x7F,0x40,//温
  0x00,0xFC,0x04,0x24,0x24,0xFC,0xA5,0xA6,0xA4,0xFC,0x24,0x24,0x24,0x04,
  0x60,0x1F,0x80,0x80,0x42,0x46,0x2A,0x12,0x12,0x2A,0x26,0x42,0xC0,0x40,//度
  0x10,0x10,0xFF,0x90,0x50,0x98,0x88,0x88,0xE9,0x8E,0x88,0x88,0x98,0x88,
  0x42,0x81,0x7F,0x00,0x40,0x40,0x26,0x25,0x18,0x08,0x16,0x31,0x60,0x20,//按
  0x30,0xEF,0x28,0x28,0x44,0x64,0xDC,0x10,0x54,0xFF,0x54,0x54,0x7C,0x10,
  0x01,0x7F,0x21,0x51,0x22,0x14,0x0F,0x14,0x25,0x3F,0x45,0x45,0x45,0x44,//键
  0x02,0x1C,0xC0,0x30,0x4C,0x30,0x0F,0x08,0xF8,0x08,0x08,0x28,0x18,0x08,
  0x5E,0x43,0x20,0x20,0x10,0x08,0x04,0x03,0x01,0x06,0x08,0x30,0x60,0x20,//次
  0x00,0xF8,0x48,0x48,0x48,0x48,0xFF,0x48,0x48,0x48,0x48,0xF8,0x00,0x00,
  0x00,0x0F,0x04,0x04,0x04,0x04,0x3F,0x44,0x44,0x44,0x44,0x4F,0x40,0x70,//电
  0x00,0xFE,0x02,0x42,0x42,0x42,0x42,0xFA,0x42,0x42,0x42,0x62,0x42,0x02,
  0x18,0x27,0x20,0x20,0x20,0x20,0x20,0x3F,0x20,0x21,0x2E,0x24,0x20,0x20,//压  
  0x00,0x20,0x20,0x20,0x20,0x20,0xFE,0xA2,0x20,0x20,0x20,0x20,0x20,0x00,
  0x00,0x80,0x40,0x20,0x10,0x0C,0x03,0x01,0x06,0x08,0x30,0x60,0x40,0x00,//大
  0x00,0x40,0xB0,0x8C,0xAA,0xA8,0xA8,0xA8,0xA8,0xA8,0x28,0x08,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x30,0x40,0x70,0x00,//气
  0x00,0x00,0x3C,0xC4,0x44,0x7C,0x00,0xFC,0x24,0x24,0x24,0xE4,0x04,0x00,
0x00,0x3F,0x21,0x1F,0x12,0x01,0x00,0x7F,0x42,0x42,0x42,0x47,0x20,0x00,//距0

0x00,0x00,0x08,0xF8,0x88,0xD8,0xBA,0x24,0xD8,0x88,0xF8,0x04,0x04,0x00,
0x00,0x00,0x7E,0x03,0x12,0x1E,0x12,0x13,0x0A,0x32,0x43,0x7E,0x00,0x00,//离1

0x00,0xF8,0x88,0x88,0xF8,0x20,0xA0,0x20,0x20,0x20,0xFE,0x20,0x00,0x00,
0x00,0x3F,0x08,0x08,0x1F,0x00,0x00,0x03,0x00,0x40,0x3F,0x00,0x00,0x00,//时2

0x00,0x00,0xF8,0x04,0x00,0xE4,0x24,0x24,0xE4,0x04,0x04,0xFC,0x00,0x00,
0x00,0x00,0x7F,0x00,0x00,0x0F,0x09,0x09,0x0F,0x00,0x40,0x7F,0x00,0x00,//间3
};
void delay_1ms(void)//1ms延时函数
{
	unsigned int i;
	for (i=0;i<600;i++)	  ;

}
void delay_nms(unsigned int n)       //N ms延时函数
  {
   unsigned int i=0;
   for (i=0;i<n;i++)
   delay_1ms();
  }
/*--------------------------------------------
LCD_write_byte: 使用SPI接口写数据到LCD
输入参数：dt：写入的数据；
command ：写数据/命令选择；
编写日期：20080918 
----------------------------------------------*/
void LCD_write_byte(unsigned char dt, unsigned char command)
{
	unsigned char i; 
	PORTA_PA0=0;	 //sce
	if(command==0)
	PORTA_PA2=0;//dc
	else 
		PORTA_PA2=1;//dc	
	for(i=0;i<8;i++)
	{ 
		if(dt&0x80)
			PORTA_PA3=1;//sdin
		else
			PORTA_PA3=0; //sdin
		dt=dt<<1;		
		PORTA_PA4=0; //sclk 		
		PORTA_PA4=1; //sclk
	}	
//	PORTB_PB5=1;//dc	
	PORTA_PA1=1;//sce	
//	PORTB_PB4=1;//sdin
}
/*---------------------------------------
LCD_init: 3310LCD初始化
编写日期：20080918 
-----------------------------------------  */
void LCD_init(void)
{
	PORTA_PA1=0;  //res	
  	delay_1ms();
 	PORTA_PA1=1; //res
 		PORTA_PA0=0;  //CE	
  	delay_1ms();
 	PORTA_PA0=1; //CE
 	  delay_1ms();
	LCD_write_byte(0x21,0);//初始化Lcd,功能设定使用扩充指令
	LCD_write_byte(0xC8,0);//设定液晶偏置电压
	LCD_write_byte(0x20,0);//使用基本指令
//	LCD_write_byte(0x0C,0);//设定显示模式，正常显示
	LCD_write_byte(0x13,0);
	LCD_write_byte(0x06,0);
	LCD_clear() ;
 LCD_write_byte(0x0C,0);//设定显示模式，正常显示
  PORTA_PA0=0;  //CE	
	
}
/*-------------------------------------------
LCD_set_XY: 设置LCD坐标函数
输入参数：X：0－83  Y：0－5
编写日期：20080918 
---------------------------------------------*/
void LCD_set_XY(unsigned char X, unsigned char Y)
{
	LCD_write_byte(0x40 | Y, 0);// column
	LCD_write_byte(0x80 | X, 0);// row
} 
/*------------------------------------------
LCD_clear: LCD清屏函数
编写日期：20080918 
--------------------------------------------*/
void LCD_clear(void)
{
   	unsigned int i;
    LCD_write_byte(0x0c, 0);			
    LCD_write_byte(0x80, 0);	
    for (i=0; i<504; i++)
    LCD_write_byte(0, 1); 
}
/*---------------------------------------------
LCD_write_shu: 显示6（宽）*12（高）点阵列数字字母符号等半角类
输入参数：c：显示的字符；
编写日期：20080918 
-----------------------------------------------*/
void LCD_write_shu(unsigned int X,unsigned int Y,unsigned int num,unsigned int N) //row:列 page:页 dd:字符
{
unsigned int line;
  unsigned int i=0;
  unsigned int n[6]={0};
  n[0]= num%10;
  n[1]=(num/10)%10;
  n[2]=(num/100)%10;
  n[3]=(num/1000)%10;
  n[4]=(num/10000)%10;
  n[5]=(num/100000)%10;
  for(i=0;i<6;i++) n[i]=n[i]+16;
  for(i=N;i>0;i--) 
  {

    LCD_set_XY(X+(N-i)*6,Y);//光标定位
    for (line=0; line<6; line++)
    LCD_write_byte(font6x8[n[i-1]][line], 1);//从ACSII码表中读取字节，然后写入液晶
  }
		 	
}
/*---------------------------------------------
LCD_write_hanzi: 显示16（宽）*16（高）点阵列汉字等半角类
输入参数：c：显示的字符；
编写日期：20080918 
----------------------------------------------*/
/*
void LCD_write_hanzi(unsigned char row, unsigned char page,unsigned char c) //row:列 page:页 dd:字符
{
	unsigned char i;  	
	
	LCD_set_XY(row*3, page);// 列，页 
	for(i=0; i<16;i++) 
	{
		LCD_write_byte(hanzi[c*32+i],1); 
	}
	
    LCD_set_XY(row*3, page+1);// 列，页 
	for(i=16; i<32;i++) 
	{
		LCD_write_byte(hanzi[c*32+i],1);
	}	
} 
*/

//==============================================================
//函数名：LCD_P8x16Str(unsigned char x,unsigned char y,unsigned char *p)
//功能描述：写入一组标准ASCII字符串
//参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
//返回：无
//==============================================================  
void LCD_P8x16Str(unsigned char x,unsigned char y,unsigned char ch[])
{
	unsigned char c=0,i=0,j=0;
	while (ch[j]!='\0')
	{
		c =(unsigned char)(ch[j]-32);
		if(x>120)
		{
			x=0;
			y++;
		}
		LCD_set_XY(x,y);
		for(i=0;i<8;i++)
			LCD_write_byte(F8X16[c*16+i],1);
		LCD_set_XY(x,(unsigned char)(y+1));
		for(i=0;i<8;i++)
			LCD_write_byte(F8X16[c*16+i+8],1);
		x+=8;
		j++;
	}
}
void LCD_P14x16Str(unsigned char x,unsigned char y,unsigned char ch[])
{
  unsigned char wm=0,ii = 0;
  unsigned int adder=1; 
	
  while(ch[ii] != '\0')
  {
    wm = 0;
    adder = 1;
    while(F14x16_Idx[wm] > 127)
    {
      if(F14x16_Idx[wm] == ch[ii])
      {
        if(F14x16_Idx[wm + 1] == ch[ii + 1])
        {
          adder = wm * 14;break;
        }
      }
      wm += 2;
    }
    if(x>118)
    {
      x=0;
      y++;
    }
		
    LCD_set_XY(x , y);
    if(adder != 1)// 显示汉字
    {
      LCD_set_XY(x , y);
      for(wm = 0;wm < 14;wm++)
      {
        LCD_write_byte(F14x16[adder],1);
        adder += 1;
      }
      LCD_set_XY(x,(unsigned char)(y+1));
      for(wm = 0;wm < 14;wm++)
      {
        LCD_write_byte(F14x16[adder],1);
        adder += 1;
      }
    }
    else			  //显示空白字符
    {
      ii += 1;
      LCD_set_XY(x,y);
      for(wm = 0;wm < 16;wm++)
      {
        LCD_write_byte(0,1);
      }
      LCD_set_XY(x,(unsigned char)(y+1));
      for(wm = 0;wm < 16;wm++)
      {
        LCD_write_byte(0,1);
      }
    }
    x += 14;
    ii += 2;
  }
}